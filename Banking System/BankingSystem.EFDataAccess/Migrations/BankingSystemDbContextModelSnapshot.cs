// <auto-generated />
using System;
using BankingSystem.EFDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankingSystem.EFDataAccess.Migrations
{
    [DbContext(typeof(BankingSystemDbContext))]
    partial class BankingSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankingSystem.ApplicationLogic.Data.CurrencyType", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Currency");

                    b.HasKey("CurrencyId");

                    b.ToTable("CurrencyType");
                });

            modelBuilder.Entity("BankingSystem.ApplicationLogic.Data.UserBankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CurrencyId");

                    b.HasKey("AccountId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("UserBankAccounts");
                });

            modelBuilder.Entity("BankingSystem.ApplicationLogic.Data.UserTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<int>("FromAccountId");

                    b.Property<int>("ToAccountId");

                    b.Property<DateTime>("TransactionDate");

                    b.HasKey("TransactionId");

                    b.HasIndex("FromAccountId");

                    b.HasIndex("ToAccountId");

                    b.ToTable("UserTransactions");
                });

            modelBuilder.Entity("BankingSystem.ApplicationLogic.Data.UserBankAccount", b =>
                {
                    b.HasOne("BankingSystem.ApplicationLogic.Data.CurrencyType", "Currency")
                        .WithMany("Accounts")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BankingSystem.ApplicationLogic.Data.UserTransaction", b =>
                {
                    b.HasOne("BankingSystem.ApplicationLogic.Data.UserBankAccount", "FromAccount")
                        .WithMany("FromTransactions")
                        .HasForeignKey("FromAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BankingSystem.ApplicationLogic.Data.UserBankAccount", "ToAccount")
                        .WithMany("ToTransactions")
                        .HasForeignKey("ToAccountId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
